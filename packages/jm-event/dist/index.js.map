{"version":3,"file":"index.js","sources":["../lib/index.js"],"sourcesContent":["/**\n * event module.\n * @module event\n */\n\nasync function emitAsync (eventName, ...args) {\n  // using a copy to avoid error when listener array changed\n  let listeners = this.listeners(eventName)\n  for (let i = 0; i < listeners.length; i++) {\n    let fn = listeners[i]\n    let obj = fn(...args)\n    if (!!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function') obj = await obj\n    if (obj !== undefined) return obj\n  }\n}\n\n/**\n * Class representing an eventEmitter.\n *\n * ```javascript\n * // es6\n * let eventEmitter = new EventEmitter();\n * eventEmitter.on('test', (info) => {\n *      console.log(info);\n * });\n * eventEmitter.once('test', (info) => {\n *      // this will be called only one time\n *      console.log(info);\n * });\n * eventEmitter.one('test', (info) => {\n *      // this will be called first\n *      console.log(info);\n * }, true);\n *\n * eventEmitter.emit('test', 'hello eventEmitter');\n * eventEmitter.off('test');\n * ```\n */\nclass EventEmitter {\n  /**\n   * Create an eventEmitter.\n   */\n  constructor (opts = {}) {\n    this._events = {}\n    if (opts.async) this.emit = emitAsync\n  }\n\n  /**\n   * Adds the listener function to the end of the listeners array for the event named eventName.\n   * No checks are made to see if the listener has already been added.\n   * Multiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.\n   *\n   * @param {*} eventName - event name\n   * @param {Function} fn - listener function\n   * @param {boolean} [prepend] - Adds to the beginning of the listeners array if true\n   * @return {EventEmitter} - for chaining\n   */\n  on (eventName, fn, prepend) {\n    this._events[eventName] || (this._events[eventName] = [])\n    if (prepend) {\n      this._events[eventName].unshift(fn)\n    } else {\n      this._events[eventName].push(fn)\n    }\n    return this\n  }\n\n  /**\n   * Adds a one time listener function for the event named eventName.\n   * The next time eventName is triggered, this listener is removed and then invoked.\n   *\n   * @param {*} eventName - event name\n   * @param {Function} fn - listener function\n   * @param {boolean} [prepend] - Adds to the beginning of the listeners array if true\n   * @return {EventEmitter} - for chaining\n   */\n  once (eventName, fn, prepend) {\n    let on = (arg1, arg2, arg3, arg4, arg5) => {\n      this.off(eventName, on)\n      fn(arg1, arg2, arg3, arg4, arg5)\n    }\n    return this.on(eventName, on, prepend)\n  }\n\n  /**\n   * Removes a listener for the event named eventName.\n   * Removes all listeners from the listener array for event named eventName if fn is null\n   * Removes all listeners from the listener array if eventName is null\n   *\n   * @param {*} [eventName] - event name\n   * @param {Function} [fn] - listener function\n   * @return {EventEmitter} - for chaining\n   */\n  off (eventName, fn) {\n    if (!fn) {\n      if (eventName === undefined) {\n        this._events = {}\n      } else if (this._events && this._events[eventName]) {\n        delete this._events[eventName]\n      }\n    } else if (this._events && this._events[eventName]) {\n      let list = this._events[eventName]\n      for (let i = 0; i < list.length; i++) {\n        if (fn === list[i]) {\n          list.splice(i, 1)\n          if (!list.length) {\n            delete this._events[eventName]\n          }\n          break\n        }\n      }\n    }\n    return this\n  }\n\n  /**\n   * Synchronously calls each of the listeners registered for the event named eventName,\n   * in the order they were registered, passing the supplied arguments to each.\n   *\n   * to break the calls, just return false on listener function.\n   * ```javascript\n   * // es6\n   * let eventEmitter = new EventEmitter();\n   * eventEmitter.on('test', (info) => {\n     *      // this will be called\n     *      console.log(info);\n     * });\n   * eventEmitter.on('test', (info) => {\n     *      // this will be called\n     *      return false;  // this break the calls\n     * });\n   * eventEmitter.on('test', (info) => {\n     *      // this will not be called.\n     *      console.log(info);\n     * });\n   * eventEmitter.emit('test', 'hello eventEmitter');\n   * ```\n   * tip: use arg1...arg5 instead of arguments for performance consider.\n   *\n   * @param {*} eventName - event name\n   * @param {*} arg1\n   * @param {*} arg2\n   * @param {*} arg3\n   * @param {*} arg4\n   * @param {*} arg5\n   * @return {EventEmitter} - for chaining\n   */\n  emit (eventName, ...args) {\n    // using a copy to avoid error when listener array changed\n    let listeners = this.listeners(eventName)\n    for (let i = 0; i < listeners.length; i++) {\n      let fn = listeners[i]\n      let obj = fn(...args)\n      if (!!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function') {\n      } else {\n        if (obj !== undefined) return obj\n      }\n    }\n  }\n\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   * @return {Array}\n   */\n  eventNames () {\n    return Object.keys(this._events)\n  }\n\n  /**\n   * Returns a copy of the array of listeners for the event named eventName.\n   * @param {*} eventName - event name\n   * @return {Array} - listener array\n   */\n  listeners (eventName) {\n    let v = this._events[eventName]\n    if (!v) return []\n    let listeners = new Array(v.length)\n    for (let i = 0; i < v.length; i++) {\n      listeners[i] = v[i]\n    }\n    return listeners\n  }\n}\n\nlet prototype = EventEmitter.prototype\nlet EM = {\n  _events: {},\n  on: prototype.on,\n  once: prototype.once,\n  off: prototype.off,\n  emit: prototype.emit,\n  eventNames: prototype.eventNames,\n  listeners: prototype.listeners\n}\n\nlet enableEvent = (obj, opts = {}) => {\n  if (obj.emit !== undefined && !opts.force) return false\n  let _events = null\n  if (obj.emit !== undefined) {\n    _events = obj._events\n  }\n  for (let key in EM) {\n    obj[key] = EM[key]\n  }\n  obj._events = _events || {}\n  if (opts.clean && _events) obj._events = {}\n  if (opts.async) obj.emit = emitAsync\n  return true\n}\n\nlet disableEvent = (obj) => {\n  if (obj.emit === undefined) return\n  for (let key in EM) {\n    delete obj[key]\n  }\n}\n\nlet $ = {\n  EventEmitter: EventEmitter,\n  enableEvent: enableEvent,\n  disableEvent: disableEvent\n}\n\nmodule.exports = $\n"],"names":["Promise","reject","callback","e","state","pact","value","observer","emitAsync","eventName","args","listeners","i","length","fn","obj","then","undefined","EventEmitter","opts","_events","async","emit","prepend","unshift","push","on","arg1","arg2","arg3","arg4","arg5","off","list","splice","Object","keys","v","Array","prototype","EM","once","eventNames","enableEvent","force","key","clean","disableEvent","$"],"mappings":"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"}
{"version":3,"file":"index.esm.js","sources":["../lib/index.js"],"sourcesContent":["/**\n * event module.\n * @module event\n */\n\nasync function emitAsync (eventName, ...args) {\n  // using a copy to avoid error when listener array changed\n  let listeners = this.listeners(eventName)\n  for (let i = 0; i < listeners.length; i++) {\n    let fn = listeners[i]\n    let obj = fn(...args)\n    if (!!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function') obj = await obj\n    if (obj !== undefined) return obj\n  }\n}\n\n/**\n * Class representing an eventEmitter.\n *\n * ```javascript\n * // es6\n * let eventEmitter = new EventEmitter();\n * eventEmitter.on('test', (info) => {\n *      console.log(info);\n * });\n * eventEmitter.once('test', (info) => {\n *      // this will be called only one time\n *      console.log(info);\n * });\n * eventEmitter.one('test', (info) => {\n *      // this will be called first\n *      console.log(info);\n * }, true);\n *\n * eventEmitter.emit('test', 'hello eventEmitter');\n * eventEmitter.off('test');\n * ```\n */\nclass EventEmitter {\n  /**\n   * Create an eventEmitter.\n   */\n  constructor (opts = {}) {\n    this._events = {}\n    if (opts.async) this.emit = emitAsync\n  }\n\n  /**\n   * Adds the listener function to the end of the listeners array for the event named eventName.\n   * No checks are made to see if the listener has already been added.\n   * Multiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.\n   *\n   * @param {*} eventName - event name\n   * @param {Function} fn - listener function\n   * @param {boolean} [prepend] - Adds to the beginning of the listeners array if true\n   * @return {EventEmitter} - for chaining\n   */\n  on (eventName, fn, prepend) {\n    this._events[eventName] || (this._events[eventName] = [])\n    if (prepend) {\n      this._events[eventName].unshift(fn)\n    } else {\n      this._events[eventName].push(fn)\n    }\n    return this\n  }\n\n  /**\n   * Adds a one time listener function for the event named eventName.\n   * The next time eventName is triggered, this listener is removed and then invoked.\n   *\n   * @param {*} eventName - event name\n   * @param {Function} fn - listener function\n   * @param {boolean} [prepend] - Adds to the beginning of the listeners array if true\n   * @return {EventEmitter} - for chaining\n   */\n  once (eventName, fn, prepend) {\n    let on = (arg1, arg2, arg3, arg4, arg5) => {\n      this.off(eventName, on)\n      fn(arg1, arg2, arg3, arg4, arg5)\n    }\n    return this.on(eventName, on, prepend)\n  }\n\n  /**\n   * Removes a listener for the event named eventName.\n   * Removes all listeners from the listener array for event named eventName if fn is null\n   * Removes all listeners from the listener array if eventName is null\n   *\n   * @param {*} [eventName] - event name\n   * @param {Function} [fn] - listener function\n   * @return {EventEmitter} - for chaining\n   */\n  off (eventName, fn) {\n    if (!fn) {\n      if (eventName === undefined) {\n        this._events = {}\n      } else if (this._events && this._events[eventName]) {\n        delete this._events[eventName]\n      }\n    } else if (this._events && this._events[eventName]) {\n      let list = this._events[eventName]\n      for (let i = 0; i < list.length; i++) {\n        if (fn === list[i]) {\n          list.splice(i, 1)\n          if (!list.length) {\n            delete this._events[eventName]\n          }\n          break\n        }\n      }\n    }\n    return this\n  }\n\n  /**\n   * Synchronously calls each of the listeners registered for the event named eventName,\n   * in the order they were registered, passing the supplied arguments to each.\n   *\n   * to break the calls, just return false on listener function.\n   * ```javascript\n   * // es6\n   * let eventEmitter = new EventEmitter();\n   * eventEmitter.on('test', (info) => {\n     *      // this will be called\n     *      console.log(info);\n     * });\n   * eventEmitter.on('test', (info) => {\n     *      // this will be called\n     *      return false;  // this break the calls\n     * });\n   * eventEmitter.on('test', (info) => {\n     *      // this will not be called.\n     *      console.log(info);\n     * });\n   * eventEmitter.emit('test', 'hello eventEmitter');\n   * ```\n   * tip: use arg1...arg5 instead of arguments for performance consider.\n   *\n   * @param {*} eventName - event name\n   * @param {*} arg1\n   * @param {*} arg2\n   * @param {*} arg3\n   * @param {*} arg4\n   * @param {*} arg5\n   * @return {EventEmitter} - for chaining\n   */\n  emit (eventName, ...args) {\n    // using a copy to avoid error when listener array changed\n    let listeners = this.listeners(eventName)\n    for (let i = 0; i < listeners.length; i++) {\n      let fn = listeners[i]\n      let obj = fn(...args)\n      if (!!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function') {\n      } else {\n        if (obj !== undefined) return obj\n      }\n    }\n  }\n\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   * @return {Array}\n   */\n  eventNames () {\n    return Object.keys(this._events)\n  }\n\n  /**\n   * Returns a copy of the array of listeners for the event named eventName.\n   * @param {*} eventName - event name\n   * @return {Array} - listener array\n   */\n  listeners (eventName) {\n    let v = this._events[eventName]\n    if (!v) return []\n    let listeners = new Array(v.length)\n    for (let i = 0; i < v.length; i++) {\n      listeners[i] = v[i]\n    }\n    return listeners\n  }\n}\n\nlet prototype = EventEmitter.prototype\nlet EM = {\n  _events: {},\n  on: prototype.on,\n  once: prototype.once,\n  off: prototype.off,\n  emit: prototype.emit,\n  eventNames: prototype.eventNames,\n  listeners: prototype.listeners\n}\n\nlet enableEvent = (obj, opts = {}) => {\n  if (obj.emit !== undefined && !opts.force) return false\n  let _events = null\n  if (obj.emit !== undefined) {\n    _events = obj._events\n  }\n  for (let key in EM) {\n    obj[key] = EM[key]\n  }\n  obj._events = _events || {}\n  if (opts.clean && _events) obj._events = {}\n  if (opts.async) obj.emit = emitAsync\n  return true\n}\n\nlet disableEvent = (obj) => {\n  if (obj.emit === undefined) return\n  for (let key in EM) {\n    delete obj[key]\n  }\n}\n\nlet $ = {\n  EventEmitter: EventEmitter,\n  enableEvent: enableEvent,\n  disableEvent: disableEvent\n}\n\nmodule.exports = $\n"],"names":["emitAsync","eventName","args","listeners","i","fn","obj","then","undefined","s","state","value","pact","observer","onFulfilled","callback","e","Promise","EventEmitter","opts","_events","async","emit","prepend","unshift","push","on","arg1","arg2","arg3","arg4","arg5","off","list","length","splice","Object","keys","v","Array","prototype","EM","once","eventNames","enableEvent","force","key","clean","disableEvent","$"],"mappings":"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"}